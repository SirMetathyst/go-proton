//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Electron:ContextsGenerator_C_1_4_2,ContextObserverGenerator_C_1_4_2,EntityIndexGenerator_C_1_4_2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

public partial class Contexts : Entitas.IContexts 
{
    public static Contexts sharedInstance 
    {
        get 
        {
			if (_sharedInstance == null)
            {
				_sharedInstance = new Contexts();
            }
            return _sharedInstance;
        }
        set 
        {
            _sharedInstance = value; 
        }
    }
  
    static Contexts _sharedInstance;

	public InputContext input { get; set; }
	public CommandContext command { get; set; }
	public MetaContext meta { get; set; }
	public CoreContext core { get; set; }


    public Entitas.IContext[] allContexts 
    {
        get 
        { 
            return new Entitas.IContext [] { input, command, meta, core };
        } 
    }
  
	public Contexts()
    {
		input = new InputContext();
		command = new CommandContext();
		meta = new MetaContext();
		core = new CoreContext();


        var postConstructors = System.Linq.Enumerable.Where(
            GetType().GetMethods(),
            method => System.Attribute.IsDefined(method, typeof(Entitas.CodeGeneration.Attributes.PostConstructorAttribute))
        );
  
        foreach (var postConstructor in postConstructors)
        {
            postConstructor.Invoke(this, null);
        }
    }
  
    public void Reset() 
    {
        var contexts = allContexts;
        for (int i = 0; i < contexts.Length; i++)
        {
            contexts[i].Reset();
        }
    }
}

public partial class Contexts 
{
#if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)
    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeContexObservers() 
    {
        try 
        {
			CreateContextObserver(input);
			CreateContextObserver(command);
			CreateContextObserver(meta);
			CreateContextObserver(core);

        } 
        catch(System.Exception) 
        {
        }
    }
    public void CreateContextObserver(Entitas.IContext context) 
    {
        if (UnityEngine.Application.isPlaying) 
        {
            var observer = new Entitas.VisualDebugging.Unity.ContextObserver(context);
            UnityEngine.Object.DontDestroyOnLoad(observer.gameObject);
        }
    }
#endif
}

public partial class Contexts
{
	public const string ID = "ID";
	public const string MyCustomEntityIndex = "MyCustomEntityIndex";


    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeEntityIndices()
    {
		core.AddEntityIndex(new Entitas.PrimaryEntityIndex<CoreEntity, int>(
			ID,core.GetGroup(CoreMatcher.ID), (e, c) => ((IDComponent)c).value));

		core.AddEntityIndex(new MyCustomEntityIndex(core));

    }
}

public static class ContextsExtensions 
{
	public static CoreEntity GetEntityWithID(this CoreContext context, int value)
    {
        return ((Entitas.PrimaryEntityIndex<CoreEntity, int>)context.GetEntityIndex(Contexts.ID)).GetEntity(value); 
    }

public static System.Collections.Generic.HashSet<CoreEntity> MyCustomEntityIndexMethod(this CoreContext context, int value1) 
{
    return ((MyCustomEntityIndex)(context.GetEntityIndex(Contexts.MyCustomEntityIndex))).MyCustomEntityIndexMethod(value1);
}


}
